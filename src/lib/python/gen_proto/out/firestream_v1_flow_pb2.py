# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: firestream_v1_flow.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import descriptor_pb2 as google_dot_protobuf_dot_descriptor__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18\x66irestream_v1_flow.proto\x12\x12\x66irestream_v1_flow\x1a google/protobuf/descriptor.proto\"?\n\x0cQuestionFlow\x12/\n\tquestions\x18\x01 \x03(\x0b\x32\x1c.firestream_v1_flow.Question\"\x84\x02\n\x08Question\x12\n\n\x02id\x18\x01 \x01(\t\x12\x12\n\nfield_path\x18\x02 \x01(\t\x12\x0f\n\x07message\x18\x03 \x01(\t\x12.\n\x04type\x18\x04 \x01(\x0e\x32 .firestream_v1_flow.QuestionType\x12\x34\n\x0c\x64\x65pendencies\x18\x05 \x03(\x0b\x32\x1e.firestream_v1_flow.Dependency\x12\x32\n\nvalidation\x18\x06 \x01(\x0b\x32\x1e.firestream_v1_flow.Validation\x12-\n\x08ui_hints\x18\x07 \x01(\x0b\x32\x1b.firestream_v1_flow.UIHints\"\xda\x02\n\nDependency\x12\x12\n\nfield_path\x18\x01 \x01(\t\x12\x16\n\x0e\x61llowed_values\x18\x02 \x03(\t\x12;\n\x04type\x18\x03 \x01(\x0e\x32-.firestream_v1_flow.Dependency.DependencyType\"\xe2\x01\n\x0e\x44\x65pendencyType\x12\x1f\n\x1b\x44\x45PENDENCY_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n\x16\x44\x45PENDENCY_TYPE_EQUALS\x10\x01\x12\x1e\n\x1a\x44\x45PENDENCY_TYPE_NOT_EQUALS\x10\x02\x12\x16\n\x12\x44\x45PENDENCY_TYPE_IN\x10\x03\x12\x1a\n\x16\x44\x45PENDENCY_TYPE_NOT_IN\x10\x04\x12 \n\x1c\x44\x45PENDENCY_TYPE_GREATER_THAN\x10\x05\x12\x1d\n\x19\x44\x45PENDENCY_TYPE_LESS_THAN\x10\x06\"\x94\x01\n\nValidation\x12\x17\n\x0frequired_fields\x18\x01 \x03(\t\x12\x15\n\rregex_pattern\x18\x02 \x01(\t\x12\x11\n\tmin_value\x18\x03 \x01(\x05\x12\x11\n\tmax_value\x18\x04 \x01(\x05\x12\x16\n\x0e\x61llowed_values\x18\x05 \x03(\t\x12\x18\n\x10\x63ustom_validator\x18\x06 \x01(\t\"n\n\x07UIHints\x12\x15\n\rdefault_value\x18\x01 \x01(\t\x12\x13\n\x0bplaceholder\x18\x02 \x01(\t\x12\x13\n\x0bis_password\x18\x03 \x01(\x08\x12\x11\n\thelp_text\x18\x04 \x01(\t\x12\x0f\n\x07\x63hoices\x18\x05 \x03(\t\"\xda\x08\n\x0b\x45xampleFlow:\xca\x08\x82\xb5\x18\xc5\x08\nm\n\x08provider\x12\x17infrastructure.provider\x1a\x1fSelect infrastructure provider: \x01:%\"#Choose your infrastructure provider\ny\n\x07ingress\x12\x1binfrastructure.ingress_type\x1a\x14Select ingress type: \x01*9\n\x17infrastructure.provider\x12\x0ePROVIDER_LOCAL\x12\x0cPROVIDER_GCP\x18\x03\n\x93\x01\n\x05https\x12\x1cinfrastructure.https.enabled\x1a\rEnable HTTPS? \x02*+\n\x17infrastructure.provider\x12\x0ePROVIDER_LOCAL\x18\x01*.\n\x1binfrastructure.ingress_type\x12\rINGRESS_LOCAL\x18\x01\n\xbf\x01\n\x12\x63loudflare_account\x12\x15\x63loudflare.account_id\x1a\x1c\x45nter Cloudflare Account ID: \x03*3\n\x1binfrastructure.ingress_type\x12\x12INGRESS_CLOUDFLARE\x18\x01\x32=\n\x12\x63loudflare.zone_id\n\x14\x63loudflare.api_token\x12\x11^[0-9a-fA-F]{32}$\n\x83\x01\n\x0bgcp_project\x12\x0egcp.project_id\x1a\x15\x45nter GCP Project ID: \x03*)\n\x17infrastructure.provider\x12\x0cPROVIDER_GCP\x18\x01\x32 \x12\x1e^[a-z][a-z0-9-]{4,28}[a-z0-9]$\nY\n\ngcp_region\x12\ngcp.region\x1a\x12Select GCP Region: \x01*)\n\x17infrastructure.provider\x12\x0cPROVIDER_GCP\x18\x01\nd\n\x0esecurity_level\x12\x1dinfrastructure.security_level\x1a\x16Select security level: \x01\x32\x19\n\x17infrastructure.provider\n:\n\ttailscale\x12\x11tailscale.enabled\x1a\x18\x45nable Tailscale access? \x02\n~\n\x11tailscale_api_key\x12\x11tailscale.api_key\x1a\x18\x45nter Tailscale API Key: \x03*\x1b\n\x11tailscale.enabled\x12\x04true\x18\x01\x32\x19\x12\x17^tskey-[a-zA-Z0-9]{60}$:\x02\x18\x01*\x8e\x01\n\x0cQuestionType\x12\x1d\n\x19QUESTION_TYPE_UNSPECIFIED\x10\x00\x12\x16\n\x12QUESTION_TYPE_ENUM\x10\x01\x12\x16\n\x12QUESTION_TYPE_BOOL\x10\x02\x12\x18\n\x14QUESTION_TYPE_STRING\x10\x03\x12\x15\n\x11QUESTION_TYPE_INT\x10\x04:Y\n\x0c\x64\x65\x66\x61ult_flow\x12\x1f.google.protobuf.MessageOptions\x18\xd0\x86\x03 \x01(\x0b\x32 .firestream_v1_flow.QuestionFlowb\x06proto3')

_QUESTIONTYPE = DESCRIPTOR.enum_types_by_name['QuestionType']
QuestionType = enum_type_wrapper.EnumTypeWrapper(_QUESTIONTYPE)
QUESTION_TYPE_UNSPECIFIED = 0
QUESTION_TYPE_ENUM = 1
QUESTION_TYPE_BOOL = 2
QUESTION_TYPE_STRING = 3
QUESTION_TYPE_INT = 4

DEFAULT_FLOW_FIELD_NUMBER = 50000
default_flow = DESCRIPTOR.extensions_by_name['default_flow']

_QUESTIONFLOW = DESCRIPTOR.message_types_by_name['QuestionFlow']
_QUESTION = DESCRIPTOR.message_types_by_name['Question']
_DEPENDENCY = DESCRIPTOR.message_types_by_name['Dependency']
_VALIDATION = DESCRIPTOR.message_types_by_name['Validation']
_UIHINTS = DESCRIPTOR.message_types_by_name['UIHints']
_EXAMPLEFLOW = DESCRIPTOR.message_types_by_name['ExampleFlow']
_DEPENDENCY_DEPENDENCYTYPE = _DEPENDENCY.enum_types_by_name['DependencyType']
QuestionFlow = _reflection.GeneratedProtocolMessageType('QuestionFlow', (_message.Message,), {
  'DESCRIPTOR' : _QUESTIONFLOW,
  '__module__' : 'firestream_v1_flow_pb2'
  # @@protoc_insertion_point(class_scope:firestream_v1_flow.QuestionFlow)
  })
_sym_db.RegisterMessage(QuestionFlow)

Question = _reflection.GeneratedProtocolMessageType('Question', (_message.Message,), {
  'DESCRIPTOR' : _QUESTION,
  '__module__' : 'firestream_v1_flow_pb2'
  # @@protoc_insertion_point(class_scope:firestream_v1_flow.Question)
  })
_sym_db.RegisterMessage(Question)

Dependency = _reflection.GeneratedProtocolMessageType('Dependency', (_message.Message,), {
  'DESCRIPTOR' : _DEPENDENCY,
  '__module__' : 'firestream_v1_flow_pb2'
  # @@protoc_insertion_point(class_scope:firestream_v1_flow.Dependency)
  })
_sym_db.RegisterMessage(Dependency)

Validation = _reflection.GeneratedProtocolMessageType('Validation', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATION,
  '__module__' : 'firestream_v1_flow_pb2'
  # @@protoc_insertion_point(class_scope:firestream_v1_flow.Validation)
  })
_sym_db.RegisterMessage(Validation)

UIHints = _reflection.GeneratedProtocolMessageType('UIHints', (_message.Message,), {
  'DESCRIPTOR' : _UIHINTS,
  '__module__' : 'firestream_v1_flow_pb2'
  # @@protoc_insertion_point(class_scope:firestream_v1_flow.UIHints)
  })
_sym_db.RegisterMessage(UIHints)

ExampleFlow = _reflection.GeneratedProtocolMessageType('ExampleFlow', (_message.Message,), {
  'DESCRIPTOR' : _EXAMPLEFLOW,
  '__module__' : 'firestream_v1_flow_pb2'
  # @@protoc_insertion_point(class_scope:firestream_v1_flow.ExampleFlow)
  })
_sym_db.RegisterMessage(ExampleFlow)

if _descriptor._USE_C_DESCRIPTORS == False:
  google_dot_protobuf_dot_descriptor__pb2.MessageOptions.RegisterExtension(default_flow)

  DESCRIPTOR._options = None
  _EXAMPLEFLOW._options = None
  _EXAMPLEFLOW._serialized_options = b'\202\265\030\305\010\nm\n\010provider\022\027infrastructure.provider\032\037Select infrastructure provider: \001:%\"#Choose your infrastructure provider\ny\n\007ingress\022\033infrastructure.ingress_type\032\024Select ingress type: \001*9\n\027infrastructure.provider\022\016PROVIDER_LOCAL\022\014PROVIDER_GCP\030\003\n\223\001\n\005https\022\034infrastructure.https.enabled\032\rEnable HTTPS? \002*+\n\027infrastructure.provider\022\016PROVIDER_LOCAL\030\001*.\n\033infrastructure.ingress_type\022\rINGRESS_LOCAL\030\001\n\277\001\n\022cloudflare_account\022\025cloudflare.account_id\032\034Enter Cloudflare Account ID: \003*3\n\033infrastructure.ingress_type\022\022INGRESS_CLOUDFLARE\030\0012=\n\022cloudflare.zone_id\n\024cloudflare.api_token\022\021^[0-9a-fA-F]{32}$\n\203\001\n\013gcp_project\022\016gcp.project_id\032\025Enter GCP Project ID: \003*)\n\027infrastructure.provider\022\014PROVIDER_GCP\030\0012 \022\036^[a-z][a-z0-9-]{4,28}[a-z0-9]$\nY\n\ngcp_region\022\ngcp.region\032\022Select GCP Region: \001*)\n\027infrastructure.provider\022\014PROVIDER_GCP\030\001\nd\n\016security_level\022\035infrastructure.security_level\032\026Select security level: \0012\031\n\027infrastructure.provider\n:\n\ttailscale\022\021tailscale.enabled\032\030Enable Tailscale access? \002\n~\n\021tailscale_api_key\022\021tailscale.api_key\032\030Enter Tailscale API Key: \003*\033\n\021tailscale.enabled\022\004true\030\0012\031\022\027^tskey-[a-zA-Z0-9]{60}$:\002\030\001'
  _QUESTIONTYPE._serialized_start=2140
  _QUESTIONTYPE._serialized_end=2282
  _QUESTIONFLOW._serialized_start=82
  _QUESTIONFLOW._serialized_end=145
  _QUESTION._serialized_start=148
  _QUESTION._serialized_end=408
  _DEPENDENCY._serialized_start=411
  _DEPENDENCY._serialized_end=757
  _DEPENDENCY_DEPENDENCYTYPE._serialized_start=531
  _DEPENDENCY_DEPENDENCYTYPE._serialized_end=757
  _VALIDATION._serialized_start=760
  _VALIDATION._serialized_end=908
  _UIHINTS._serialized_start=910
  _UIHINTS._serialized_end=1020
  _EXAMPLEFLOW._serialized_start=1023
  _EXAMPLEFLOW._serialized_end=2137
# @@protoc_insertion_point(module_scope)
