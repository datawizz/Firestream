FROM node:18-slim

# Install Chrome dependencies for Puppeteer
RUN apt-get update && apt-get install -y \
    chromium \
    chromium-sandbox \
    ca-certificates \
    fonts-liberation \
    libappindicator3-1 \
    libasound2 \
    libatk-bridge2.0-0 \
    libatk1.0-0 \
    libc6 \
    libcairo2 \
    libcups2 \
    libdbus-1-3 \
    libexpat1 \
    libfontconfig1 \
    libgbm1 \
    libgcc1 \
    libglib2.0-0 \
    libgtk-3-0 \
    libnspr4 \
    libnss3 \
    libpango-1.0-0 \
    libpangocairo-1.0-0 \
    libstdc++6 \
    libx11-6 \
    libx11-xcb1 \
    libxcb1 \
    libxcomposite1 \
    libxcursor1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxi6 \
    libxrandr2 \
    libxrender1 \
    libxss1 \
    libxtst6 \
    lsb-release \
    wget \
    xdg-utils \
    --no-install-recommends \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /app

# Create directory for screenshots (optional)
RUN mkdir -p /tmp/screenshots

# Copy package files
COPY package*.json ./

# Install production dependencies
RUN npm ci --only=production

# Copy TypeScript config
COPY tsconfig.json ./

# Copy source code
COPY lib ./lib
COPY src ./src
COPY index.ts* ./

# Build TypeScript
RUN npm run build

# Remove source files to reduce image size
RUN rm -rf src lib index.ts tsconfig.json

# Set Chrome path for Puppeteer
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
ENV PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium

# Run as non-root user for security
USER node

# Add metadata
LABEL maintainer="{{ maintainer_email | default(value="devops@example.com") }}"
LABEL description="{{ site_name }} scraper using {{ workflow_type }} workflow"
LABEL version="1.0.0"

# Health check for K8s (optional)
# HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=1 \
#   CMD node -e "console.log('healthy')" || exit 1

# Single execution entry point
CMD ["node", "dist/index.js"]
