[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ package_name | default(value=app_name | lower | replace(from=" ", to="-")) }}"
version = "{{ version }}"
description = "{{ description }}"
readme = "README.md"
license = {text = "{{ license | default(value="Apache-2.0") }}"}
authors = [
    {name = "{{ author | default(value=organization) }}", email = "{{ author_email }}"},
]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: {{ development_status | default(value="3 - Alpha") }}",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pyspark=={{ pyspark_version | default(value="3.5.1") }}",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "pyarrow>=10.0.0",
    {% if config_format == "yaml" %}
    "pyyaml>=6.0",
    {% endif %}
    {% if config_format == "toml" %}
    "toml>=0.10.2",
    {% endif %}
    {% if delta_enabled %}
    "delta-spark=={{ delta_spark_version | default(value="2.4.0") }}",
    {% endif %}
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.4.0",
    "isort>=5.12.0",
    {% if use_pre_commit %}
    "pre-commit>=3.3.0",
    {% endif %}
]
{% if s3_enabled %}
aws = [
    "boto3>=1.26.0",
]
{% endif %}

[project.scripts]
{{ app_name | lower | replace(from=" ", to="-") }} = "{{ package_name | default(value="spark_app") }}.main:main"

[tool.black]
line-length = {{ max_line_length | default(value=100) }}
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = {{ max_line_length | default(value=100) }}
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "integration: marks tests as integration tests",
    "slow: marks tests as slow",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]
