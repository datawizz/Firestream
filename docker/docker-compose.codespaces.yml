version: "3.7"

# services:
#   devcontainer:
#     init: true
#     image: fireworks:latest
#     build:
#       context: ..
#       dockerfile: Dockerfile
#       target: devcontainer
#     env_file:
#       - ../etc/.env.local
#     environment:
#       - COMPOSE_PROJECT_NAME=fireworks
#     volumes:
#       # Mount the project directory on the local file system
#       - ../:/workspace

#       # Enable Docker-from-Docker
#       # This uses the host's Docker Engine through socket mapping and is preferred over Docker-in-Docker for security and latency
#       - /var/run/docker.sock:/var/run/docker.sock

#       # Persist images built in devcontainer
#       - /var/lib/docker/image:/var/lib/docker/image
#       - /var/lib/docker/buildkit:/var/lib/docker/buildkit
#       # The path might differ depending on your host OS


#     command: sleep infinity # Prevents the container from stopping

#     # Configure DNS resolution to use the internal IP address assigned to the KinD Control Plane
#     # This allows internal Kubernetes services (which have arbitrary IP address assignments) to be addressed using DNS (i.e. name.svc.cluster.local)
#     # NOTE: This will make the internet inaccessible until the KinD Control Plane has created and connected via the "bootstrap.sh" command 
#     cap_add:
#       - NET_ADMIN

#     network_mode: "host" # Enables K3D access from within container



networks:
  codespace:
    driver: bridge

services:
  devcontainer:
    init: true
    image: fireworks:latest
    build:
      context: ..
      dockerfile: Dockerfile
      target: devcontainer
    env_file:
      - ../etc/.env.local
    environment:
      - COMPOSE_PROJECT_NAME=fireworks
    ports:
      - "8000:8000"
      - "80:80"
    volumes:
      # Mount the project directory on the local file system
      - ../:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
    network_mode: host
    container_name: docker
    domainname: codespaces.io
    hostname: docker
    restart: always
